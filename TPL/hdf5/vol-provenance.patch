From d9e4f578769bc6a17173f88015f008ba1efd6ae5 Mon Sep 17 00:00:00 2001
From: Greg Sjaardema <gdsjaar@sandia.gov>
Date: Thu, 22 Apr 2021 13:20:30 -0600
Subject: [PATCH] Fixes to get working with current hdf5-async brach

---
 CMakeLists.txt  |   9 ++--
 H5VLprovnc.c    | 139 +++++++++++++++++++++++++++++---------------------------
 vpicio_uni_h5.c |  15 +++---
 3 files changed, 85 insertions(+), 78 deletions(-)

diff --git a/Makefile b/Makefile
index 1aac98c..4479aef 100644
--- a/Makefile
+++ b/Makefile
@@ -10,15 +10,16 @@ INCLUDES=-I$(HDF5_DIR)/include
 CFLAGS = $(DEBUG) -fPIC $(INCLUDES) -Wall
 #LIBS=-L$(HDF5_DIR)/lib -L$(MPI_DIR)/lib -lhdf5 -lz
 LIBS=-L$(HDF5_DIR)/lib -lhdf5 -lz
-DYNLDFLAGS = $(DEBUG) -dynamiclib -current_version 1.0 -fPIC $(LIBS)
+DYNLDFLAGS = -dynamiclib -current_version 1.0 
 LDFLAGS = $(DEBUG) $(LIBS)
 ARFLAGS = rs
 
 # Shared library VOL connector
+DYNEXT = dylib
 DYNSRC = H5VLprovnc.c
 DYNOBJ = $(DYNSRC:.c=.o)
-DYNLIB = libh5prov.dylib
-DYNDBG = libh5prov.dylib.dSYM
+DYNLIB = libh5prov.$(DYNEXT)
+DYNDBG = libh5prov.$(DYNEXT).dSYM
 
 # Testcase section
 EXSRC = vpicio_uni_h5.c
@@ -32,7 +33,7 @@ $(EXEXE): $(EXSRC) $(STATLIB) $(DYNLIB)
 	$(CC) $(CFLAGS) $^ -o $(EXEXE) $(LDFLAGS)
 
 $(DYNLIB): $(DYNSRC)
-	$(CC) $(CFLAGS) $(DYNLDFLAGS) $^ -o $@
+	$(CC) $(CFLAGS) $(DYNLDFLAGS) $(LIBS) $^ -o $@
 
 .PHONY: clean all
 clean:
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3b11e05..d4a851a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,6 +6,8 @@ if(NOT DEFINED CMAKE_MACOSX_RPATH)
   set(CMAKE_MACOSX_RPATH 0)
 endif()
 
+set(CMAKE_C_STANDARD 99)
+
 if(APPLE)
   # We are doing a unix-style install i.e. everything will be installed in
   # CMAKE_INSTALL_PREFIX/bin and CMAKE_INSTALL_PREFIX/lib etc. as on other unix
@@ -76,13 +78,14 @@ set(HDF5_VOL_PROV_SRCS
 # Libraries
 #------------------------------------------------------------------------------
 # HDF5 PROV
-add_library(hdf5_vol_prov ${HDF5_VOL_PROV_SRCS})
+#add_library(hdf5_vol_prov SHARED ${HDF5_VOL_PROV_SRCS})
+add_library(h5prov SHARED ${HDF5_VOL_PROV_SRCS})
 message("HDF5_LIBRARIES: ${HDF5_LIBRARIES}")
-target_link_libraries(hdf5_vol_prov ${HDF5_LIBRARIES})
+target_link_libraries(h5prov ${HDF5_LIBRARIES})
 
 #------------------------------------------------------------------------------
 # Tests
 #------------------------------------------------------------------------------
 add_executable(vpicio_uni_h5 vpicio_uni_h5.c)
 
-target_link_libraries(vpicio_uni_h5 hdf5_vol_prov ${MPI_LIBRARIES})
+target_link_libraries(vpicio_uni_h5 h5prov ${MPI_LIBRARIES})
diff --git a/H5VLprovnc.c b/H5VLprovnc.c
index b5d0e06..e51be48 100644
--- a/H5VLprovnc.c
+++ b/H5VLprovnc.c
@@ -48,7 +48,7 @@
 
 /* Whether to display log messge when callback is invoked */
 /* (Uncomment to enable) */
-/* #define ENABLE_PROVNC_LOGGING */
+#define ENABLE_PROVNC_LOGGING
 
 /* Hack for missing va_copy() in old Visual Studio editions
  * (from H5win2_defs.h - used on VS2012 and earlier)
@@ -69,7 +69,6 @@ typedef struct H5VL_prov_dataset_info_t dataset_prov_info_t;
 typedef struct H5VL_prov_group_info_t group_prov_info_t;
 typedef struct H5VL_prov_datatype_info_t datatype_prov_info_t;
 typedef struct H5VL_prov_attribute_info_t attribute_prov_info_t;
-typedef struct H5VL_prov_file_info_t file_prov_info_t;
 
 typedef struct H5VL_provenance_t {
     hid_t  under_vol_id;        /* ID for underlying VOL connector */
@@ -220,7 +219,7 @@ unsigned long DS_LL_TOTAL_TIME;         //dataset
 unsigned long GRP_LL_TOTAL_TIME;        //group
 unsigned long DT_LL_TOTAL_TIME;         //datatype
 unsigned long ATTR_LL_TOTAL_TIME;       //attribute
-static prov_helper_t* PROV_HELPER = NULL;
+prov_helper_t* PROV_HELPER = NULL;
 
 
 //======================================= statistics =======================================
@@ -311,14 +310,14 @@ static herr_t H5VL_provenance_link_copy(void *src_obj, const H5VL_loc_params_t *
 static herr_t H5VL_provenance_link_move(void *src_obj, const H5VL_loc_params_t *loc_params1, void *dst_obj, const H5VL_loc_params_t *loc_params2, hid_t lcpl_id, hid_t lapl_id, hid_t dxpl_id, void **req);
 static herr_t H5VL_provenance_link_get(void *obj, const H5VL_loc_params_t *loc_params, H5VL_link_get_t get_type, hid_t dxpl_id, void **req, va_list arguments);
 static herr_t H5VL_provenance_link_specific(void *obj, const H5VL_loc_params_t *loc_params, H5VL_link_specific_t specific_type, hid_t dxpl_id, void **req, va_list arguments);
-static herr_t H5VL_provenance_link_optional(void *obj, H5VL_attr_optional_t opt_type, hid_t dxpl_id, void **req, va_list arguments);
+static herr_t H5VL_provenance_link_optional(void *obj, const H5VL_loc_params_t *loc_params, H5VL_attr_optional_t opt_type, hid_t dxpl_id, void **req, va_list arguments);
 
 /* Object callbacks */
 static void *H5VL_provenance_object_open(void *obj, const H5VL_loc_params_t *loc_params, H5I_type_t *obj_to_open_type, hid_t dxpl_id, void **req);
 static herr_t H5VL_provenance_object_copy(void *src_obj, const H5VL_loc_params_t *src_loc_params, const char *src_name, void *dst_obj, const H5VL_loc_params_t *dst_loc_params, const char *dst_name, hid_t ocpypl_id, hid_t lcpl_id, hid_t dxpl_id, void **req);
 static herr_t H5VL_provenance_object_get(void *obj, const H5VL_loc_params_t *loc_params, H5VL_object_get_t get_type, hid_t dxpl_id, void **req, va_list arguments);
 static herr_t H5VL_provenance_object_specific(void *obj, const H5VL_loc_params_t *loc_params, H5VL_object_specific_t specific_type, hid_t dxpl_id, void **req, va_list arguments);
-static herr_t H5VL_provenance_object_optional(void *obj, H5VL_attr_optional_t opt_type, hid_t dxpl_id, void **req, va_list arguments);
+static herr_t H5VL_provenance_object_optional(void *obj, const H5VL_loc_params_t *loc_params, H5VL_attr_optional_t opt_type, hid_t dxpl_id, void **req, va_list arguments);
 
 /* Container/connector introspection callbacks */
 static herr_t H5VL_provenance_introspect_get_cap_flags(const void *info, unsigned *cap_flags);
@@ -1274,7 +1273,7 @@ dataset_prov_info_t * add_dataset_node(unsigned long obj_file_no,
     assert(dset);
     assert(dset->under_object);
     assert(file_info_in);
-	
+
     if (obj_file_no != file_info_in->file_no) {//creating a dataset from an external place
         file_prov_info_t* external_home_file;
 
@@ -1402,7 +1401,7 @@ void _fake_obj_free(H5VL_provenance_t *obj)
  *
  */
 H5VL_provenance_t * _obj_wrap_under(void *under, H5VL_provenance_t *upper_o,
-                                    const char *target_obj_name, 
+                                    const char *target_obj_name,
                                     H5I_type_t target_obj_type,
                                     hid_t dxpl_id, void **req)
 {
@@ -1458,7 +1457,7 @@ H5VL_provenance_t * _obj_wrap_under(void *under, H5VL_provenance_t *upper_o,
                     target_obj_type == H5I_DATATYPE || target_obj_type == H5I_ATTR);
 
             _new_loc_pram(target_obj_type, &p);
-            get_native_info(under, &p, upper_o->under_vol_id, 
+            get_native_info(under, &p, upper_o->under_vol_id,
                             H5VL_OBJECT_GET_INFO, dxpl_id,
                             NULL, &oinfo, H5O_INFO_BASIC);
             token = oinfo.token;
@@ -1564,7 +1563,7 @@ dataset_prov_info_t * new_ds_prov_info(void* under_object, hid_t vol_id, H5O_tok
 
     assert(under_object);
     assert(file_info);
-	
+
     ds_info = new_dataset_info(file_info, ds_name, token);
 
     dataset_get_wrapper(under_object, vol_id, H5VL_DATASET_GET_TYPE, dxpl_id, req, &dt_id);
@@ -1829,7 +1828,10 @@ int prov_write(prov_helper_t* helper_in, const char* msg, unsigned long duration
                 break;
     }
 
-    sprintf(pline, "%s %lu\n",  msg, duration);//assume less than 64 functions
+    sprintf(pline, "[%s][User:%s][PID:%d][TID:%llu][Func:%s][%luus]\n", time, helper_in->user_name, helper_in->pid, helper_in->tid, msg, duration);
+		//msg is captured function name
+
+    //    sprintf(pline, "%s %lu\n",  msg, duration);//assume less than 64 functions
     //printf("Func name:[%s], hash index = [%u], overhead = [%lu]\n",  msg, genHash(msg), duration);
     switch(helper_in->prov_level){
         case File_only:
@@ -2100,7 +2102,7 @@ H5VL_provenance_info_cmp(int *cmp_value, const void *_info1, const void *_info2)
 
     /* Initialize comparison value */
     *cmp_value = 0;
-    
+
     /* Compare under VOL connector classes */
     H5VLcmp_connector_cls(cmp_value, info1->under_vol_id, info2->under_vol_id);
     if(*cmp_value != 0){
@@ -2714,7 +2716,7 @@ H5VL_provenance_attr_open(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_attr_read(void *attr, hid_t mem_type_id, void *buf,
     hid_t dxpl_id, void **req)
 {
@@ -2754,7 +2756,7 @@ H5VL_provenance_attr_read(void *attr, hid_t mem_type_id, void *buf,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_attr_write(void *attr, hid_t mem_type_id, const void *buf,
     hid_t dxpl_id, void **req)
 {
@@ -2794,7 +2796,7 @@ H5VL_provenance_attr_write(void *attr, hid_t mem_type_id, const void *buf,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_attr_get(void *obj, H5VL_attr_get_t get_type, hid_t dxpl_id,
     void **req, va_list arguments)
 {
@@ -2834,7 +2836,7 @@ H5VL_provenance_attr_get(void *obj, H5VL_attr_get_t get_type, hid_t dxpl_id,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_attr_specific(void *obj, const H5VL_loc_params_t *loc_params,
     H5VL_attr_specific_t specific_type, hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -2874,7 +2876,7 @@ H5VL_provenance_attr_specific(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_attr_optional(void *obj, H5VL_dataset_optional_t opt_type, hid_t dxpl_id, void **req,
     va_list arguments)
 {
@@ -2914,7 +2916,7 @@ H5VL_provenance_attr_optional(void *obj, H5VL_dataset_optional_t opt_type, hid_t
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_attr_close(void *attr, hid_t dxpl_id, void **req)
 {
     unsigned long start = get_time_usec();
@@ -3051,7 +3053,7 @@ H5VL_provenance_dataset_open(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_dataset_read(void *dset, hid_t mem_type_id, hid_t mem_space_id,
     hid_t file_space_id, hid_t plist_id, void *buf, void **req)
 {
@@ -3130,7 +3132,7 @@ H5VL_provenance_dataset_read(void *dset, hid_t mem_type_id, hid_t mem_space_id,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_dataset_write(void *dset, hid_t mem_type_id, hid_t mem_space_id,
     hid_t file_space_id, hid_t plist_id, const void *buf, void **req)
 {
@@ -3214,7 +3216,7 @@ H5VL_provenance_dataset_write(void *dset, hid_t mem_type_id, hid_t mem_space_id,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_dataset_get(void *dset, H5VL_dataset_get_t get_type,
     hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -3254,7 +3256,7 @@ H5VL_provenance_dataset_get(void *dset, H5VL_dataset_get_t get_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_dataset_specific(void *obj, H5VL_dataset_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -3313,7 +3315,7 @@ H5VL_provenance_dataset_specific(void *obj, H5VL_dataset_specific_t specific_typ
 
             // Update dimension sizes, if simple dataspace
             if(H5S_SIMPLE == ds_info->ds_class) {
-                const hsize_t *new_size = va_arg(my_arguments, const hsize_t *); 
+                const hsize_t *new_size = va_arg(my_arguments, const hsize_t *);
                 unsigned u;
 
                 // Update the dataset's dimensions & element count
@@ -3384,7 +3386,7 @@ H5VL_provenance_dataset_specific(void *obj, H5VL_dataset_specific_t specific_typ
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_dataset_optional(void *obj, H5VL_attr_optional_t opt_type,
                                  hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -3399,7 +3401,7 @@ H5VL_provenance_dataset_optional(void *obj, H5VL_attr_optional_t opt_type,
 #endif
 
     m1 = get_time_usec();
-    ret_value = H5VLdataset_optional(o->under_object, opt_type, 
+    ret_value = H5VLdataset_optional(o->under_object, opt_type,
                                      o->under_vol_id, dxpl_id, req, arguments);
     m2 = get_time_usec();
 
@@ -3425,7 +3427,7 @@ H5VL_provenance_dataset_optional(void *obj, H5VL_attr_optional_t opt_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_dataset_close(void *dset, hid_t dxpl_id, void **req)
 {
     unsigned long start = get_time_usec();
@@ -3561,7 +3563,7 @@ H5VL_provenance_datatype_open(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_datatype_get(void *dt, H5VL_datatype_get_t get_type,
     hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -3601,7 +3603,7 @@ H5VL_provenance_datatype_get(void *dt, H5VL_datatype_get_t get_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_datatype_specific(void *obj, H5VL_datatype_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -3635,7 +3637,6 @@ H5VL_provenance_datatype_specific(void *obj, H5VL_datatype_specific_t specific_t
 
     // Save copy of underlying VOL connector ID and prov helper, in case of
     // refresh destroying the current object
-    under_obj = o->under_object;
     under_vol_id = o->under_vol_id;
     helper = o->prov_helper;
 
@@ -3689,8 +3690,8 @@ H5VL_provenance_datatype_specific(void *obj, H5VL_datatype_specific_t specific_t
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
-H5VL_provenance_datatype_optional(void *obj, H5VL_attr_optional_t opt_type, 
+static herr_t
+H5VL_provenance_datatype_optional(void *obj, H5VL_attr_optional_t opt_type,
                                   hid_t dxpl_id, void **req, va_list arguments)
 {
     unsigned long start = get_time_usec();
@@ -3704,7 +3705,7 @@ H5VL_provenance_datatype_optional(void *obj, H5VL_attr_optional_t opt_type,
 #endif
 
     m1 = get_time_usec();
-    ret_value = H5VLdatatype_optional(o->under_object, opt_type, o->under_vol_id, 
+    ret_value = H5VLdatatype_optional(o->under_object, opt_type, o->under_vol_id,
                                       dxpl_id, req, arguments);
     m2 = get_time_usec();
 
@@ -3730,7 +3731,7 @@ H5VL_provenance_datatype_optional(void *obj, H5VL_attr_optional_t opt_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_datatype_close(void *dt, hid_t dxpl_id, void **req)
 {
     unsigned long start = get_time_usec();
@@ -4003,7 +4004,7 @@ H5VL_provenance_file_open(const char *name, unsigned flags, hid_t fapl_id,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_file_get(void *file, H5VL_file_get_t get_type, hid_t dxpl_id,
     void **req, va_list arguments)
 {
@@ -4044,7 +4045,7 @@ H5VL_provenance_file_get(void *file, H5VL_file_get_t get_type, hid_t dxpl_id,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_file_specific_reissue(void *obj, hid_t connector_id,
     H5VL_file_specific_t specific_type, hid_t dxpl_id, void **req, ...)
 {
@@ -4069,7 +4070,7 @@ H5VL_provenance_file_specific_reissue(void *obj, hid_t connector_id,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_file_specific(void *file, H5VL_file_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -4194,8 +4195,8 @@ H5VL_provenance_file_specific(void *file, H5VL_file_specific_t specific_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
-H5VL_provenance_file_optional(void *file, H5VL_attr_optional_t opt_type, 
+static herr_t
+H5VL_provenance_file_optional(void *file, H5VL_attr_optional_t opt_type,
                               hid_t dxpl_id, void **req, va_list arguments)
 {
     unsigned long start = get_time_usec();
@@ -4235,7 +4236,7 @@ H5VL_provenance_file_optional(void *file, H5VL_attr_optional_t opt_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_file_close(void *file, hid_t dxpl_id, void **req)
 {
     unsigned long start = get_time_usec();
@@ -4371,7 +4372,7 @@ H5VL_provenance_group_open(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_group_get(void *obj, H5VL_group_get_t get_type, hid_t dxpl_id,
     void **req, va_list arguments)
 {
@@ -4411,7 +4412,7 @@ H5VL_provenance_group_get(void *obj, H5VL_group_get_t get_type, hid_t dxpl_id,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_group_specific(void *obj, H5VL_group_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -4497,8 +4498,8 @@ H5VL_provenance_group_specific(void *obj, H5VL_group_specific_t specific_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
-H5VL_provenance_group_optional(void *obj, H5VL_attr_optional_t opt_type, 
+static herr_t
+H5VL_provenance_group_optional(void *obj, H5VL_attr_optional_t opt_type,
                                hid_t dxpl_id, void **req, va_list arguments)
 {
     unsigned long start = get_time_usec();
@@ -4512,7 +4513,7 @@ H5VL_provenance_group_optional(void *obj, H5VL_attr_optional_t opt_type,
 #endif
 
     m1 = get_time_usec();
-    ret_value = H5VLgroup_optional(o->under_object, opt_type, o->under_vol_id, 
+    ret_value = H5VLgroup_optional(o->under_object, opt_type, o->under_vol_id,
                                    dxpl_id, req, arguments);
     m2 = get_time_usec();
 
@@ -4538,7 +4539,7 @@ H5VL_provenance_group_optional(void *obj, H5VL_attr_optional_t opt_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_group_close(void *grp, hid_t dxpl_id, void **req)
 {
     unsigned long start = get_time_usec();
@@ -4589,7 +4590,7 @@ H5VL_provenance_group_close(void *grp, hid_t dxpl_id, void **req)
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_link_create_reissue(H5VL_link_create_type_t create_type,
     void *obj, const H5VL_loc_params_t *loc_params, hid_t connector_id,
     hid_t lcpl_id, hid_t lapl_id, hid_t dxpl_id, void **req, ...)
@@ -4615,7 +4616,7 @@ H5VL_provenance_link_create_reissue(H5VL_link_create_type_t create_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_link_create(H5VL_link_create_type_t create_type, void *obj,
     const H5VL_loc_params_t *loc_params, hid_t lcpl_id, hid_t lapl_id,
     hid_t dxpl_id, void **req, va_list arguments)
@@ -4692,7 +4693,7 @@ H5VL_provenance_link_create(H5VL_link_create_type_t create_type, void *obj,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_link_copy(void *src_obj, const H5VL_loc_params_t *loc_params1,
     void *dst_obj, const H5VL_loc_params_t *loc_params2, hid_t lcpl_id,
     hid_t lapl_id, hid_t dxpl_id, void **req)
@@ -4723,7 +4724,7 @@ H5VL_provenance_link_copy(void *src_obj, const H5VL_loc_params_t *loc_params1,
     /* Check for async request */
     if(req && *req)
         *req = H5VL_provenance_new_obj(*req, under_vol_id, o_dst->prov_helper);
-            
+
     if(o_dst)
         prov_write(o_dst->prov_helper, __func__, get_time_usec() - start);
 
@@ -4747,7 +4748,7 @@ H5VL_provenance_link_copy(void *src_obj, const H5VL_loc_params_t *loc_params1,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_link_move(void *src_obj, const H5VL_loc_params_t *loc_params1,
     void *dst_obj, const H5VL_loc_params_t *loc_params2, hid_t lcpl_id,
     hid_t lapl_id, hid_t dxpl_id, void **req)
@@ -4797,7 +4798,7 @@ H5VL_provenance_link_move(void *src_obj, const H5VL_loc_params_t *loc_params1,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_link_get(void *obj, const H5VL_loc_params_t *loc_params,
     H5VL_link_get_t get_type, hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -4818,7 +4819,7 @@ H5VL_provenance_link_get(void *obj, const H5VL_loc_params_t *loc_params,
     /* Check for async request */
     if(req && *req)
         *req = H5VL_provenance_new_obj(*req, o->under_vol_id, o->prov_helper);
-            
+
     if(o)
         prov_write(o->prov_helper, __func__, get_time_usec() - start);
 
@@ -4837,7 +4838,7 @@ H5VL_provenance_link_get(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_link_specific(void *obj, const H5VL_loc_params_t *loc_params,
     H5VL_link_specific_t specific_type, hid_t dxpl_id, void **req, va_list arguments)
 {
@@ -4878,7 +4879,8 @@ H5VL_provenance_link_specific(void *obj, const H5VL_loc_params_t *loc_params,
  *-------------------------------------------------------------------------
  */
 static herr_t
-H5VL_provenance_link_optional(void *obj, H5VL_attr_optional_t opt_type, 
+H5VL_provenance_link_optional(void *obj, const H5VL_loc_params_t *loc_params,
+			      H5VL_attr_optional_t opt_type,
                               hid_t dxpl_id, void **req, va_list arguments)
 {
     unsigned long start = get_time_usec();
@@ -4892,7 +4894,7 @@ H5VL_provenance_link_optional(void *obj, H5VL_attr_optional_t opt_type,
 #endif
 
     m1 = get_time_usec();
-    ret_value = H5VLlink_optional(o->under_object, opt_type, o->under_vol_id, 
+    ret_value = H5VLlink_optional(o->under_object, loc_params, o->under_vol_id, opt_type,
                                   dxpl_id, req, arguments);
     m2 = get_time_usec();
 
@@ -4967,7 +4969,7 @@ H5VL_provenance_object_open(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_object_copy(void *src_obj, const H5VL_loc_params_t *src_loc_params,
     const char *src_name, void *dst_obj, const H5VL_loc_params_t *dst_loc_params,
     const char *dst_name, hid_t ocpypl_id, hid_t lcpl_id, hid_t dxpl_id,
@@ -5010,7 +5012,7 @@ H5VL_provenance_object_copy(void *src_obj, const H5VL_loc_params_t *src_loc_para
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_object_get(void *obj, const H5VL_loc_params_t *loc_params, H5VL_object_get_t get_type, hid_t dxpl_id, void **req, va_list arguments)
 {
     unsigned long start = get_time_usec();
@@ -5049,7 +5051,7 @@ H5VL_provenance_object_get(void *obj, const H5VL_loc_params_t *loc_params, H5VL_
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_object_specific(void *obj, const H5VL_loc_params_t *loc_params,
     H5VL_object_specific_t specific_type, hid_t dxpl_id, void **req,
     va_list arguments)
@@ -5165,8 +5167,9 @@ H5VL_provenance_object_specific(void *obj, const H5VL_loc_params_t *loc_params,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
-H5VL_provenance_object_optional(void *obj, H5VL_attr_optional_t opt_type, 
+static herr_t
+H5VL_provenance_object_optional(void *obj, const H5VL_loc_params_t *loc_params,
+				H5VL_attr_optional_t opt_type,
                                 hid_t dxpl_id, void **req, va_list arguments)
 {
     unsigned long start = get_time_usec();
@@ -5180,8 +5183,8 @@ H5VL_provenance_object_optional(void *obj, H5VL_attr_optional_t opt_type,
 #endif
 
     m1 = get_time_usec();
-    ret_value = H5VLobject_optional(o->under_object, opt_type, o->under_vol_id, 
-                                    dxpl_id, req, arguments);
+    ret_value = H5VLobject_optional(o->under_object, loc_params, o->under_vol_id,
+                                    opt_type, dxpl_id, req, arguments);
     m2 = get_time_usec();
 
     /* Check for async request */
@@ -5266,7 +5269,7 @@ H5VL_provenance_introspect_opt_query(void *obj, H5VL_subclass_t cls,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_request_wait(void *obj, uint64_t timeout,
     H5VL_request_status_t *status)
 {
@@ -5308,7 +5311,7 @@ H5VL_provenance_request_wait(void *obj, uint64_t timeout,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_request_notify(void *obj, H5VL_request_notify_t cb, void *ctx)
 {
     unsigned long start = get_time_usec();
@@ -5348,7 +5351,7 @@ H5VL_provenance_request_notify(void *obj, H5VL_request_notify_t cb, void *ctx)
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_request_cancel(void *obj, H5VL_request_status_t *status)
 {
     unsigned long start = get_time_usec();
@@ -5386,7 +5389,7 @@ H5VL_provenance_request_cancel(void *obj, H5VL_request_status_t *status)
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_request_specific(void *obj, H5VL_request_specific_t specific_type,
     va_list arguments)
 {
@@ -5422,7 +5425,7 @@ H5VL_provenance_request_specific(void *obj, H5VL_request_specific_t specific_typ
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_request_optional(void *obj, H5VL_attr_optional_t opt_type,
                                  va_list arguments)
 {
@@ -5437,7 +5440,7 @@ H5VL_provenance_request_optional(void *obj, H5VL_attr_optional_t opt_type,
 #endif
 
     m1 = get_time_usec();
-    ret_value = H5VLrequest_optional(o->under_object, opt_type, 
+    ret_value = H5VLrequest_optional(o->under_object, opt_type,
                                      o->under_vol_id, arguments);
     m2 = get_time_usec();
 
@@ -5460,7 +5463,7 @@ H5VL_provenance_request_optional(void *obj, H5VL_attr_optional_t opt_type,
  *
  *-------------------------------------------------------------------------
  */
-static herr_t 
+static herr_t
 H5VL_provenance_request_free(void *obj)
 {
     unsigned long start = get_time_usec();
diff --git a/vpicio_uni_h5.c b/vpicio_uni_h5.c
index 54d09d4..6e9a6ab 100644
--- a/vpicio_uni_h5.c
+++ b/vpicio_uni_h5.c
@@ -222,7 +222,7 @@ void print_usage(char *name)
 
 hid_t fileaccess_mod(const char* log_file_path){
     hid_t fapl_id = H5I_INVALID_HID;
-    htri_t connector_is_registered;    
+    htri_t connector_is_registered;
     H5VL_provenance_info_t prov_vol_info;
     //void *vol_info = NULL;
 
@@ -246,7 +246,7 @@ hid_t fileaccess_mod(const char* log_file_path){
 
     hid_t connector_id = -1;
 
-    
+
     if((connector_is_registered = H5VLis_connector_registered_by_name("provenance")) < 0){
         //printf("(connector is registered) < 0 \n");
         goto done;
@@ -258,16 +258,16 @@ hid_t fileaccess_mod(const char* log_file_path){
             printf("can not get vol id of provenance \n");
              goto error;
          }
-    } 
-    else {//not registed        
+    }
+    else {//not registed
         //use built-in connector
         //printf("use built-in connector \n");
         connector_id = H5VL_PROVNC;
         if(H5Iinc_ref(connector_id) < 0){
             printf("H5Iinc_ref failed \n");
-         goto error;      
+         goto error;
         }
-    } 
+    }
 
     prov_vol_info.prov_file_path = log_file_path;//"my_prov_file";
     prov_vol_info.prov_level = 2; //0/1 for print, 2 for file only, 3 for both.
@@ -296,7 +296,8 @@ int main (int argc, char* argv[])
 {
     char *file_name = argv[1];
 
-    MPI_Init(&argc,&argv);
+    int provided;
+    MPI_Init_thread(&argc,&argv,MPI_THREAD_MULTIPLE, &provided);
     int my_rank, num_procs, nts, i, j, nthread, sleep_time = 0;
     MPI_Comm_rank (MPI_COMM_WORLD, &my_rank);
     MPI_Comm_size (MPI_COMM_WORLD, &num_procs);
-- 
2.6.1

